initSidebarItems({"enum":[["Indexing","A scheme for selecting vertices to combine into primitives."],["Primitive","Describes what geometric primitives are created from vertex data."]],"struct":[["Mesh","A reference to a GPU mesh object that can be drawn by a `Painter` supporting the associated resource, vertex, material, and primitive combination. The memory cost of this object is negligible, since  (unlike `MeshSource`) it is a cloneable  reference to GPU allocated resources."],["MeshSource","A mesh storage object and builder that sent as drawable geometry to the GPU. Once uploaded, this mesh can only be rendered using a `Painter` whose  associated style supports the given vertex and material type (`<V, M>`). In addition, the painter must be setup for this mesh's primitive type."],["Vert","A vertex that includes pos only."],["VertC","A vertex that includes pos and color."],["VertN","A vertex that includes pos and norm."],["VertNC","A vertex that includes pos, norm, and color."],["VertNT","A vertex that includes pos, norm, and tex."],["VertNTT","A vertex that includes pos, norm, tan, bitan, and tex."]],"trait":[["HasColor","A vertex with a color component."],["HasNorm","A vertex with a norm component."],["HasTan","A vertex with a tan component."],["HasTex","A vertex with a tex component."],["Vertex","A type that can be used as a vertex."],["WithColor","A vertex that can have a color attribute added."],["WithNorm","A vertex that can have a norm attribute added."],["WithTan","A vertex that can have tan and bitan attributes added."],["WithTex","A vertex that can have a tex attribute added."]]});